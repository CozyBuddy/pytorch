import pandas as pd

train = pd.read_csv('score_train.csv')

test = pd.read_csv('score_test.csv')

print(train.head())
print(test.head())
print(train.info())
target = train.pop('Credit_Score')

data = pd.concat([train,test])

data_o = pd.get_dummies(data)

ltrain = len(train)

train = data_o.iloc[:ltrain]

test = data_o.iloc[ltrain:]

print(train.isna().sum())
print(test.isna().sum())
from sklearn.model_selection import train_test_split

X_Train, X_val , y_train, y_val = train_test_split(train,target,test_size=0.1 , random_state=0)

from sklearn.ensemble import RandomForestClassifier

rf = RandomForestClassifier()

rf.fit(X_Train,y_train)

y_pred = rf.predict(X_val)

from sklearn.metrics import f1_score

f1 = f1_score(y_pred , y_val , average='macro')

print(f1)

pred = rf.predict(test)
submit = pd.DataFrame({
    'pred' : pred
})

submit.to_csv('result.csv', index=False)


train = pd.read_csv('drug_train.csv')

test = pd.read_csv('drug_test.csv')

target = train.pop('Drug')

print(train.isna().sum())
print(test.isna().sum())

print(train.head())

ltrain = len(train)
data = pd.concat([train,test])

data_o = pd.get_dummies(data)

train = data_o.iloc[:ltrain]

test = data_o.iloc[ltrain:]

from sklearn.model_selection import train_test_split

X_train , X_val , y_train ,y_val = train_test_split(train,target,test_size=0.05 ,random_state=0)

from sklearn.ensemble import RandomForestClassifier

rf = RandomForestClassifier()

rf.fit(X_train,y_train)

y_pred = rf.predict(X_val)

from sklearn.metrics import f1_score

f1 = f1_score(y_pred,y_val , average='macro')

print('f1' , f1)
pred = rf.predict(test)

submit = pd.DataFrame({
    'pred' : pred
})

submit.to_csv('result.csv' , index=False)

train = pd.read_csv('glass_train.csv')

test = pd.read_csv('glass_test.csv')

print(train.isna().sum())
print(test.isna().sum())

target = train.pop('Type')

data = pd.concat([train,test])

data_o = pd.get_dummies(data)

ltrain = len(train)

train = data_o.iloc[:ltrain]

test = data_o.iloc[ltrain:]

from sklearn.model_selection import train_test_split

X_train,X_val,y_train,y_val = train_test_split(train,target,test_size=0.03 , random_state=0)

from sklearn.ensemble import RandomForestClassifier

rf = RandomForestClassifier()

rf.fit(X_train,y_train)

y_pred = rf.predict(X_val)

from sklearn.metrics import f1_score

f1 = f1_score(y_val, y_pred , average='weighted')

print('f1', f1)

submit = pd.DataFrame({'pred' :
    y_pred})

submit.to_csv('result.csv' , index=False)